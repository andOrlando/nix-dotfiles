diff --git a/src/config.rs b/src/config.rs
index 64d038b..ea7bedc 100644
--- a/src/config.rs
+++ b/src/config.rs
@@ -91,8 +91,6 @@ impl GfxConfig {
     pub fn load(config_path: String) -> Self {
         let mut file = OpenOptions::new()
             .read(true)
-            .write(true)
-            .create(true)
             .open(&config_path)
             .unwrap_or_else(|_| panic!("The directory {} is missing", config_path)); // okay to cause panic here
         let mut buf = String::new();
@@ -100,16 +98,17 @@ impl GfxConfig {
         if let Ok(read_len) = file.read_to_string(&mut buf) {
             if read_len == 0 {
                 config = Self::new(config_path);
-            } else if let Ok(data) = serde_json::from_str(&buf) {
-                config = data;
-                config.config_path = config_path;
-            } else if let Ok(data) = serde_json::from_str(&buf) {
-                let old: GfxConfig300 = data;
-                config = old.into();
-                config.config_path = config_path;
             } else {
-                warn!("Could not deserialise {}, recreating", config_path);
-                config = GfxConfig::new(config_path);
+                match serde_json::from_str(&buf) {
+                    Ok(data) => {
+                        config = data;
+                        config.config_path = config_path;
+                    },
+                    Err(e) => {
+                        warn!("Could not deserialise {} due to error {}", config_path, e);
+                        panic!("Please remove {} then restart service", config_path);
+                    }
+                }
             }
         } else {
             config = Self::new(config_path)
@@ -138,10 +137,7 @@ impl GfxConfig {
     }
 
     pub fn write(&self) {
-        let mut file = File::create(&self.config_path).expect("Couldn't overwrite config");
-        let json = serde_json::to_string_pretty(self).expect("Parse config to JSON failed");
-        file.write_all(json.as_bytes())
-            .unwrap_or_else(|err| error!("Could not write config: {}", err));
+        println!("Won't write config since it's managed by nix.")
     }
 }
 
